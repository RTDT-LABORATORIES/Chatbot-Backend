{
    "openapi": "3.0.3",
    "info": {
        "title": "RTDT BLB",
        "version": "1.0.0",
        "description": "RTDT's Business Logic Backend API"
    },
    "paths": {
        "/events/{id}/actions": {
            "post": {
                "operationId": "actions_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "actions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventActionCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EventActionCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EventActionCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventActionCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/events/{id}/assignee": {
            "put": {
                "operationId": "assignee_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "assignee"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventAssigneeUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EventAssigneeUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EventAssigneeUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventAssigneeUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/events/{id}/status": {
            "put": {
                "operationId": "status_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "status"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventStatusUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EventStatusUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EventStatusUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventStatusUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EventActionCreate": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "integer"
                    },
                    "text": {
                        "type": "string",
                        "title": "Description"
                    },
                    "event": {
                        "type": "integer"
                    }
                },
                "required": [
                    "author",
                    "event",
                    "text"
                ]
            },
            "EventAssigneeUpdate": {
                "type": "object",
                "properties": {
                    "assignee": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "EventStatusUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    }
                }
            },
            "StatusEnum": {
                "enum": [
                    "PENDING",
                    "IN_PROGRESS",
                    "ON_HOLD",
                    "UNRESOLVED",
                    "RESOLVED",
                    "REJECTED"
                ],
                "type": "string",
                "description": "* `PENDING` - Pending\n* `IN_PROGRESS` - In progress\n* `ON_HOLD` - On hold\n* `UNRESOLVED` - Unresolved\n* `RESOLVED` - Resolved\n* `REJECTED` - Rejected"
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Token\""
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ]
}